[{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/articles/setup_developers.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set up","title":"Set up your environment to contribute","text":"vignette explain set environment able contribute package. OmopPostgresConnector open-source package open contributions, want contribute need able run tests locally. need local postgres instance following credentials: GitHub actions run container credentials already created, can rely GitHub actions run tests . several ways :","code":"POSTGRES_USER=omop_postgres_connector POSTGRES_PASSWORD=omopverse POSTGRES_DB=omop_test"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/articles/setup_developers.html","id":"install-postgres-and-create-manually-a-database","dir":"Articles","previous_headings":"Set up","what":"Install Postgres and create manually a database","title":"Set up your environment to contribute","text":"Download postgres Set installer install Postgre pgAdmin 4. Please use PORT 5432, port 5432 available create environment variable OMOP_POSTGRES_CONNECTOR_PORT port using: Create user. Please use USER: omop_postgres_connector PASSWORD: omopverse; possible please create environment variables provide credentials: Create database. Please use DATABASE: omop_test; possible please create environment variables provide credentials: successfully completed 4 steps please go Check set .","code":"OMOP_POSTGRES_CONNECTOR_PORT=5432 OMOP_POSTGRES_CONNECTOR_USER=omop_postgres_connector OMOP_POSTGRES_CONNECTOR_PASSWORD=omopverse OMOP_POSTGRES_CONNECTOR_DB=omop_test"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/articles/setup_developers.html","id":"install-postgres-via-docker","dir":"Articles","previous_headings":"Set up","what":"Install Postgres via docker","title":"Set up your environment to contribute","text":"Download docker desktop Run following code terminal:","code":"docker run --name local-postgres \\   -e POSTGRES_USER=omop_postgres_connector \\   -e POSTGRES_PASSWORD=omopverse \\   -e POSTGRES_DB=omop_test \\   -p 5432:5432 \\   -d postgres:16"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/articles/setup_developers.html","id":"check-the-set-up","dir":"Articles","previous_headings":"","what":"Check the set up","title":"Set up your environment to contribute","text":"connection successful able run following lines code without error: Now ready try cloning code locally run devtools::check() error arises set .","code":"library(DBI) library(RPostgres) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union  # create connection con <- dbConnect(   drv = Postgres(),   dbname = Sys.getenv(\"OMOP_POSTGRES_CONNECTOR_DB\", \"omop_test\"),   host = \"localhost\",   port = Sys.getenv(\"OMOP_POSTGRES_CONNECTOR_PORT\", \"5432\"),   user = Sys.getenv(\"OMOP_POSTGRES_CONNECTOR_USER\", \"omop_postgres_connector\"),   password = Sys.getenv(\"OMOP_POSTGRES_CONNECTOR_PASSWORD\", \"omopverse\") ) con #> <PqConnection> omop_test@localhost:5432  # create new schema dbExecute(conn = con, statement = \"CREATE SCHEMA opc_main;\") #> [1] 0 dbWriteTable(conn = con, name = Id(schema = \"opc_main\", table = \"test\"), value = cars) tbl(con, I(\"opc_main.test\")) #> # Source:   table<opc_main.test> [?? x 2] #> # Database: postgres  [omop_postgres_connector@localhost:5432/omop_test] #>    speed  dist #>    <dbl> <dbl> #>  1     4     2 #>  2     4    10 #>  3     7     4 #>  4     7    22 #>  5     8    16 #>  6     9    10 #>  7    10    18 #>  8    10    26 #>  9    10    34 #> 10    11    17 #> # ℹ more rows dbExecute(con, \"DROP SCHEMA opc_main CASCADE;\") #> NOTICE:  drop cascades to table opc_main.test #> [1] 0  # create new database dbExecute(conn = con, statement = \"CREATE DATABASE opc_test;\") #> [1] 0 dbDisconnect(conn = con)  # connect to new database con <- dbConnect(   drv = Postgres(),   dbname = \"opc_test\",   host = \"localhost\",   port = Sys.getenv(\"OMOP_POSTGRES_CONNECTOR_PORT\", \"5432\"),   user = Sys.getenv(\"OMOP_POSTGRES_CONNECTOR_USER\", \"omop_postgres_connector\"),   password = Sys.getenv(\"OMOP_POSTGRES_CONNECTOR_PASSWORD\", \"omopverse\") )  dbExecute(conn = con, statement = \"CREATE SCHEMA opc_main;\") #> [1] 0 dbWriteTable(conn = con, name = Id(schema = \"opc_main\", table = \"test\"), value = cars) tbl(con, I(\"opc_main.test\")) #> # Source:   table<opc_main.test> [?? x 2] #> # Database: postgres  [omop_postgres_connector@localhost:5432/opc_test] #>    speed  dist #>    <dbl> <dbl> #>  1     4     2 #>  2     4    10 #>  3     7     4 #>  4     7    22 #>  5     8    16 #>  6     9    10 #>  7    10    18 #>  8    10    26 #>  9    10    34 #> 10    11    17 #> # ℹ more rows dbDisconnect(conn = con)  # delete created database con <- dbConnect(   drv = Postgres(),   dbname = Sys.getenv(\"OMOP_POSTGRES_CONNECTOR_DB\", \"omop_test\"),   host = \"localhost\",   port = Sys.getenv(\"OMOP_POSTGRES_CONNECTOR_PORT\", \"5432\"),   user = Sys.getenv(\"OMOP_POSTGRES_CONNECTOR_USER\", \"omop_postgres_connector\"),   password = Sys.getenv(\"OMOP_POSTGRES_CONNECTOR_PASSWORD\", \"omopverse\") ) dbExecute(con, \"DROP DATABASE opc_test;\") #> [1] 0 dbDisconnect(conn = con)"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2025). OmopPostgresConnector: Package (One Line, Title Case). R package version 0.0.0.9000, https://oxford-pharmacoepi.github.io/OmopPostgresConnector/.","code":"@Manual{,   title = {OmopPostgresConnector: What the Package Does (One Line, Title Case)},   author = {First Last},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://oxford-pharmacoepi.github.io/OmopPostgresConnector/}, }"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/index.html","id":"omoppostgresconnector","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"goal OmopPostgresConnector …","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (One Line, Title Case)","text":"can install development version OmopPostgresConnector GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"oxford-pharmacoepi/OmopPostgresConnector\")"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"What the Package Does (One Line, Title Case)","text":"basic example shows solve common problem: special using README.Rmd instead just README.md? can include R chunks like : ’ll still need render README.Rmd regularly, keep README.md --date. devtools::build_readme() handy . can also embed plots, example:  case, don’t forget commit push resulting figure files, display GitHub CRAN.","code":"library(OmopPostgresConnector) ## basic example code summary(cars) #>      speed           dist        #>  Min.   : 4.0   Min.   :  2.00   #>  1st Qu.:12.0   1st Qu.: 26.00   #>  Median :15.0   Median : 36.00   #>  Mean   :15.4   Mean   : 42.98   #>  3rd Qu.:19.0   3rd Qu.: 56.00   #>  Max.   :25.0   Max.   :120.00"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/OmopPostgresConnector-package.html","id":null,"dir":"Reference","previous_headings":"","what":"OmopPostgresConnector: What the Package Does (One Line, Title Case) — OmopPostgresConnector-package","title":"OmopPostgresConnector: What the Package Does (One Line, Title Case) — OmopPostgresConnector-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/OmopPostgresConnector-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"OmopPostgresConnector: What the Package Does (One Line, Title Case) — OmopPostgresConnector-package","text":"Maintainer: First Last first.last@example.com (ORCID)","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/cancelJob.html","id":null,"dir":"Reference","previous_headings":"","what":"Cancel a Postgres job. — cancelJob","title":"Cancel a Postgres job. — cancelJob","text":"Cancel Postgres job.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/cancelJob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cancel a Postgres job. — cancelJob","text":"","code":"cancelJob(src, pid)"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/cancelJob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cancel a Postgres job. — cancelJob","text":"src can either cdm_reference, postgres_source PqConnection object. pid Numeric. pid cancel, multiple can supplied.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/cancelJob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cancel a Postgres job. — cancelJob","text":"Invisible TRUE process successful.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/cdmDoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for consistent documentation of cdm. — cdmDoc","title":"Helper for consistent documentation of cdm. — cdmDoc","text":"Helper consistent documentation cdm.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/cdmDoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for consistent documentation of cdm. — cdmDoc","text":"cdm <cdm_reference> object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/cdmFromPostgres.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a <cdm_reference> object from a postgres connection — cdmFromPostgres","title":"Create a <cdm_reference> object from a postgres connection — cdmFromPostgres","text":"Create <cdm_reference> object postgres connection","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/cdmFromPostgres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a <cdm_reference> object from a postgres connection — cdmFromPostgres","text":"","code":"cdmFromPostgres(   con,   cdmName = NULL,   cdmSchema = \"public\",   cdmPrefix = \"\",   writeSchema = \"results\",   writePrefix = \"\",   achillesSchema = NULL,   achillesPrefix = \"\",   cdmVersion = NULL,   cohortTables = character(),   validation = TRUE )"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/cdmFromPostgres.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a <cdm_reference> object from a postgres connection — cdmFromPostgres","text":"con PqConnection created DBI RPostgres. cdmName String, name cdm object. cdmSchema String, name schema OMOP CDM Standard tables. cdmPrefix String, prefix leading OMOP CDM Standard tables. writeSchema String, name schema cohort permanent tables. writePrefix String, prefix leading cohort permanent tables. achillesSchema String, name schema achilles tables. achillesPrefix String, prefix leading achilles tables. cdmVersion String, OMOP CDM version cdm object. cohortTables Character vector, names cohort tables. validation Logical, wether validate cdm object .","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/cdmFromPostgres.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a <cdm_reference> object from a postgres connection — cdmFromPostgres","text":"<cdm_reference> object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/copyCdmToPostgres.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy a cdm (independently of its source) to a — copyCdmToPostgres","title":"Copy a cdm (independently of its source) to a — copyCdmToPostgres","text":"Copy cdm (independently source) ","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/copyCdmToPostgres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy a cdm (independently of its source) to a — copyCdmToPostgres","text":"","code":"copyCdmToPostgres(   cdm,   con,   cdmSchema = \"public\",   cdmPrefix = \"\",   writeSchema = \"results\",   writePrefix = \"\",   achillesSchema = NULL,   achillesPrefix = \"\" )"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/copyCdmToPostgres.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy a cdm (independently of its source) to a — copyCdmToPostgres","text":"cdm <cdm_reference> object. con PqConnection created DBI RPostgres. cdmSchema String, name schema OMOP CDM Standard tables. cdmPrefix String, prefix leading OMOP CDM Standard tables. writeSchema String, name schema cohort permanent tables. writePrefix String, prefix leading cohort permanent tables. achillesSchema String, name schema achilles tables. achillesPrefix String, prefix leading achilles tables.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/copyCdmToPostgres.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy a cdm (independently of its source) to a — copyCdmToPostgres","text":"cdm reference inserted new pq_cdm source.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/copyCdmToPostgres.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy a cdm (independently of its source) to a — copyCdmToPostgres","text":"","code":"#library(omock) #library(OmopPostgresConnector) # #pq <- localPostgres() #cdm <- mockCdmFromDataset(datasetName = \"GiBleed\") # #pq_cdm <- copyCdmToPostgres(cdm = cdm, con = pq) #pq_cdm"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/createCdmIndexes.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — createCdmIndexes","title":"Title — createCdmIndexes","text":"Title","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/createCdmIndexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — createCdmIndexes","text":"","code":"createCdmIndexes(cdm)"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/createCdmIndexes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — createCdmIndexes","text":"cdm <cdm_reference> object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/createCdmIndexes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — createCdmIndexes","text":"cdm object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/createIndexes.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — createIndexes","title":"Title — createIndexes","text":"Title","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/createIndexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — createIndexes","text":"","code":"createIndexes(x, schema, tableName, index)"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/createIndexes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — createIndexes","text":"x PqConnection, cdm_reference, cdm_table pq_cdm object. schema schema tableName tableName index index create","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/createIndexes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — createIndexes","text":"x object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/createTableIndexes.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — createTableIndexes","title":"Title — createTableIndexes","text":"Title","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/createTableIndexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — createTableIndexes","text":"","code":"createTableIndexes(table)"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/createTableIndexes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — createTableIndexes","text":"table <cdm_table> object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/createTableIndexes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — createTableIndexes","text":"<cdm_table> object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/existingCdmIndexes.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify the existing indexes in the tables of a <cdm_reference> object. — existingCdmIndexes","title":"Identify the existing indexes in the tables of a <cdm_reference> object. — existingCdmIndexes","text":"Identify existing indexes tables <cdm_reference> object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/existingCdmIndexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify the existing indexes in the tables of a <cdm_reference> object. — existingCdmIndexes","text":"","code":"existingCdmIndexes(cdm)"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/existingCdmIndexes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify the existing indexes in the tables of a <cdm_reference> object. — existingCdmIndexes","text":"cdm <cdm_reference> object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/existingCdmIndexes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify the existing indexes in the tables of a <cdm_reference> object. — existingCdmIndexes","text":"tibble object existing indexes.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/existingIndexes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the indexes that exist in database. — existingIndexes","title":"Retrieve the indexes that exist in database. — existingIndexes","text":"Retrieve indexes exist database.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/existingIndexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the indexes that exist in database. — existingIndexes","text":"","code":"existingIndexes(x, schema = NULL, tableName = NULL)"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/existingIndexes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the indexes that exist in database. — existingIndexes","text":"x PqConnection, cdm_reference, cdm_table pq_cdm object. schema schema tableName tableName","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/existingIndexes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the indexes that exist in database. — existingIndexes","text":"tibble object existing indexes.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/existingTableIndexes.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — existingTableIndexes","title":"Title — existingTableIndexes","text":"Title","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/existingTableIndexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — existingTableIndexes","text":"","code":"existingTableIndexes(table)"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/existingTableIndexes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — existingTableIndexes","text":"table <cdm_table> object.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/existingTableIndexes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — existingTableIndexes","text":"tibble object existing indexes.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/getJobs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ongoing Postgres jobs. — getJobs","title":"Get ongoing Postgres jobs. — getJobs","text":"Get ongoing Postgres jobs.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/getJobs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ongoing Postgres jobs. — getJobs","text":"","code":"getJobs(src, user)"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/getJobs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ongoing Postgres jobs. — getJobs","text":"src can either cdm_reference, postgres_source PqConnection object. user Users filter . NULL filter applied.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/getJobs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ongoing Postgres jobs. — getJobs","text":"Tibble identified jobs.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/localPostgres.html","id":null,"dir":"Reference","previous_headings":"","what":"This function creates a connection to the local postgres instance — localPostgres","title":"This function creates a connection to the local postgres instance — localPostgres","text":"relays environmental variables : dbname = OMOP_POSTGRES_CONNECTOR_DB host = OMOP_POSTGRES_CONNECTOR_HOST port = OMOP_POSTGRES_CONNECTOR_PORT user = OMOP_POSTGRES_CONNECTOR_USER password = OMOP_POSTGRES_CONNECTOR_PASSWORD","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/localPostgres.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function creates a connection to the local postgres instance — localPostgres","text":"","code":"localPostgres()"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/localPostgres.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function creates a connection to the local postgres instance — localPostgres","text":"connection postgres local instance","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/localPostgres.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function creates a connection to the local postgres instance — localPostgres","text":"","code":"if (FALSE) { # \\dontrun{ library(OmopPostgresConnector)  localPostgres() } # }"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/postgresSource.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a postgres source object — postgresSource","title":"Create a postgres source object — postgresSource","text":"Create postgres source object","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/postgresSource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a postgres source object — postgresSource","text":"","code":"postgresSource(   con,   cdmSchema = \"public\",   cdmPrefix = \"\",   writeSchema = \"results\",   writePrefix = \"\",   achillesSchema = NULL,   achillesPrefix = \"\" )"},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/postgresSource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a postgres source object — postgresSource","text":"con PqConnection created DBI RPostgres. cdmSchema String, name schema OMOP CDM Standard tables. cdmPrefix String, prefix leading OMOP CDM Standard tables. writeSchema String, name schema cohort permanent tables. writePrefix String, prefix leading cohort permanent tables. achillesSchema String, name schema achilles tables. achillesPrefix String, prefix leading achilles tables.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/postgresSource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a postgres source object — postgresSource","text":"<pq_cdm> source object","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/pqSourceDoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for consistent documentation of table. — pqSourceDoc","title":"Helper for consistent documentation of table. — pqSourceDoc","text":"Helper consistent documentation table.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/pqSourceDoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for consistent documentation of table. — pqSourceDoc","text":"con PqConnection created DBI RPostgres. cdmSchema String, name schema OMOP CDM Standard tables. cdmPrefix String, prefix leading OMOP CDM Standard tables. writeSchema String, name schema cohort permanent tables. writePrefix String, prefix leading cohort permanent tables. achillesSchema String, name schema achilles tables. achillesPrefix String, prefix leading achilles tables.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr compute omopgenerics cdmDisconnect, cdmTableFromSource, dropSourceTable, insertCdmTo, insertTable, listSourceTables, readSourceTable","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/tableDoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for consistent documentation of table. — tableDoc","title":"Helper for consistent documentation of table. — tableDoc","text":"Helper consistent documentation table.","code":""},{"path":"https://oxford-pharmacoepi.github.io/OmopPostgresConnector/reference/tableDoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for consistent documentation of table. — tableDoc","text":"table <cdm_table> object.","code":""}]
